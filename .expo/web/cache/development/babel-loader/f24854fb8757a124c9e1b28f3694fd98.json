{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport TransactionScreen from \"../screens/Transaction\";\nimport SearchScreen from \"../screens/Search\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nvar BottomTabNavigator = function (_Component) {\n  _inherits(BottomTabNavigator, _Component);\n\n  var _super = _createSuper(BottomTabNavigator);\n\n  function BottomTabNavigator() {\n    _classCallCheck(this, BottomTabNavigator);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BottomTabNavigator, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(NavigationContainer, {\n        children: _jsxs(Tab.Navigator, {\n          screensOptions: function screensOptions(_ref) {\n            var route = _ref.route;\n            return {\n              tabBarIcon: function tabBarIcon(_ref2) {\n                var focused = _ref2.focused,\n                    color = _ref2.color,\n                    size = _ref2.size;\n                var iconName;\n\n                if (route.name === \"Transaction\") {\n                  iconName = \"book\";\n                } else if (route.name === \"Search\") {\n                  iconName = \"search\";\n                }\n\n                return _jsx(Ionicons, {\n                  name: iconName,\n                  size: size,\n                  color: color\n                });\n              }\n            };\n          },\n          tabBarOptions: {\n            activeTintColor: \"#FFFFFF\",\n            inactiveTintColor: \"black\",\n            style: {\n              height: 130,\n              borderTopWidth: 0,\n              backgroundColor: \"#5653d4\"\n            },\n            labelStyle: {\n              fontSize: 20,\n              fontfamily: \"Rajdhani_600SemiBold\"\n            },\n            labelPostion: \"beside-icon\",\n            tabStyle: {\n              marginTop: 25,\n              marginLeft: 10,\n              marginRight: 10,\n              borderRadius: 30,\n              borderWidth: 2,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              backgroundColor: \"#5653d4\"\n            }\n          },\n          children: [_jsx(Tab.Screen, {\n            name: \"Transaction\",\n            component: TransactionScreen\n          }), _jsx(Tab.Screen, {\n            name: \"Search\",\n            component: SearchScreen\n          })]\n        })\n      });\n    }\n  }]);\n\n  return BottomTabNavigator;\n}(Component);\n\nexport { BottomTabNavigator as default };","map":{"version":3,"sources":["C:/Users/Garg/Desktop/whitehatjr/eliberary/components/BottomTabNavigator.js"],"names":["React","Component","NavigationContainer","createBottomTabNavigator","Ionicons","TransactionScreen","SearchScreen","Tab","BottomTabNavigator","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","style","height","borderTopWidth","backgroundColor","labelStyle","fontSize","fontfamily","labelPostion","tabStyle","marginTop","marginLeft","marginRight","borderRadius","borderWidth","alignItems","justifyContent"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,wBAAR,QAAuC,+BAAvC;AACA,OAAOC,QAAP;AAEA,OAAOC,iBAAP;AACA,OAAOC,YAAP;;;AAEA,IAAMC,GAAG,GAAGJ,wBAAwB,EAApC;;IAEqBK,kB;;;;;;;;;;;;;WACnB,kBAAS;AACP,aACE,KAAC,mBAAD;AAAA,kBACI,MAAC,GAAD,CAAK,SAAL;AACA,UAAA,cAAc,EAAI;AAAA,gBAAEC,KAAF,QAAEA,KAAF;AAAA,mBAAY;AAC5BC,cAAAA,UAAU,EAAC,2BAAwB;AAAA,oBAAtBC,OAAsB,SAAtBA,OAAsB;AAAA,oBAAdC,KAAc,SAAdA,KAAc;AAAA,oBAARC,IAAQ,SAARA,IAAQ;AACjC,oBAAIC,QAAJ;;AACF,oBAAGL,KAAK,CAACM,IAAN,KAAa,aAAhB,EAA8B;AAC5BD,kBAAAA,QAAQ,GAAG,MAAX;AACD,iBAFD,MAEM,IAAGL,KAAK,CAACM,IAAN,KAAa,QAAhB,EAAyB;AAC7BD,kBAAAA,QAAQ,GAAG,QAAX;AACD;;AAED,uBACE,KAAC,QAAD;AAAU,kBAAA,IAAI,EAAGA,QAAjB;AACA,kBAAA,IAAI,EAAID,IADR;AAEA,kBAAA,KAAK,EAAID;AAFT,kBADF;AAMC;AAf2B,aAAZ;AAAA,WADlB;AAoBA,UAAA,aAAa,EAAE;AACdI,YAAAA,eAAe,EAAE,SADH;AAEdC,YAAAA,iBAAiB,EAAE,OAFL;AAGdC,YAAAA,KAAK,EAAC;AACJC,cAAAA,MAAM,EAAC,GADH;AAEJC,cAAAA,cAAc,EAAC,CAFX;AAGJC,cAAAA,eAAe,EAAC;AAHZ,aAHQ;AAQdC,YAAAA,UAAU,EAAC;AACTC,cAAAA,QAAQ,EAAC,EADA;AAETC,cAAAA,UAAU,EAAC;AAFF,aARG;AAaZC,YAAAA,YAAY,EAAC,aAbD;AAcZC,YAAAA,QAAQ,EAAC;AACPC,cAAAA,SAAS,EAAC,EADH;AAEPC,cAAAA,UAAU,EAAC,EAFJ;AAGPC,cAAAA,WAAW,EAAC,EAHL;AAIPC,cAAAA,YAAY,EAAC,EAJN;AAKPC,cAAAA,WAAW,EAAC,CALL;AAMPC,cAAAA,UAAU,EAAC,QANJ;AAOPC,cAAAA,cAAc,EAAC,QAPR;AAQPZ,cAAAA,eAAe,EAAC;AART;AAdG,WApBf;AAAA,qBAgDI,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAG,aAAnB;AAAiC,YAAA,SAAS,EAAIhB;AAA9C,YAhDJ,EAiDI,KAAC,GAAD,CAAK,MAAL;AAAY,YAAA,IAAI,EAAG,QAAnB;AAA4B,YAAA,SAAS,EAAIC;AAAzC,YAjDJ;AAAA;AADJ,QADF;AAuDD;;;;EAzD6CL,S;;SAA3BO,kB","sourcesContent":["import React, { Component } from 'react';\r\nimport {NavigationContainer} from '@react-navigation/native'\r\nimport {createBottomTabNavigator} from \"@react-navigation/bottom-tabs\"\r\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\r\n\r\nimport TransactionScreen from '../screens/Transaction';\r\nimport SearchScreen from '../screens/Search';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default class BottomTabNavigator extends Component {\r\n  render() {\r\n    return (\r\n      <NavigationContainer>\r\n          <Tab.Navigator\r\n          screensOptions = {({route})=>({\r\n            tabBarIcon:({focused,color,size})=>{\r\n              let iconName;\r\n            if(route.name===\"Transaction\"){\r\n              iconName = \"book\"\r\n            }else if(route.name===\"Search\"){\r\n              iconName = \"search\"\r\n            }\r\n\r\n            return(\r\n              <Ionicons name= {iconName}\r\n              size = {size}\r\n              color = {color}\r\n              />\r\n            )\r\n            }\r\n          })\r\n          \r\n        }\r\n          tabBarOptions={{\r\n           activeTintColor: \"#FFFFFF\",\r\n           inactiveTintColor: \"black\",\r\n           style:{\r\n             height:130,\r\n             borderTopWidth:0,\r\n             backgroundColor:\"#5653d4\",\r\n           },\r\n           labelStyle:{\r\n             fontSize:20,\r\n             fontfamily:\"Rajdhani_600SemiBold\",\r\n             \r\n           },\r\n             labelPostion:\"beside-icon\",\r\n             tabStyle:{\r\n               marginTop:25,\r\n               marginLeft:10,\r\n               marginRight:10,\r\n               borderRadius:30,\r\n               borderWidth:2,\r\n               alignItems:\"center\",\r\n               justifyContent:\"center\",\r\n               backgroundColor:\"#5653d4\"\r\n             }\r\n          }}\r\n        \r\n          >\r\n\r\n              <Tab.Screen name = \"Transaction\" component = {TransactionScreen}/>\r\n              <Tab.Screen name = \"Search\" component = {SearchScreen}/>\r\n          </Tab.Navigator>\r\n      </NavigationContainer>\r\n    )\r\n  }\r\n}\r\n\r\n/*var switchContainer = createSwitchNavigator({\r\n  MainScreen : MainScreen,\r\n  Buzzer:Buzzer\r\n})\r\nconst Appcontainer = createAppContainer(switchContainer)*/"]},"metadata":{},"sourceType":"module"}