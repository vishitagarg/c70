{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar bgImage = require(\"../assets/background2.png\");\n\nvar appIcon = require(\"../assets/appIcon.png\");\n\nvar appName = require(\"../assets/appName.png\");\n\nvar TransactionScreen = function (_Component) {\n  _inherits(TransactionScreen, _Component);\n\n  var _super = _createSuper(TransactionScreen);\n\n  function TransactionScreen(props) {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getCameraPermissions = function _callee(domState) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                domState: domState,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, domState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              domState = _this.state.domState;\n\n              if (domState === \"bookId\") {\n                _this.setState({\n                  bookId: data,\n                  domState: \"normal\",\n                  scanned: true\n                });\n              } else if (domState === \"studentId\") {\n                _this.setState({\n                  studentId: data,\n                  domState: \"normal\",\n                  scanned: true\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee3() {\n      var _this$state, bookId, studentId, transactionType, isEligible, _this$state2, bookName, studentName, _this$state3;\n\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _this$state = _this.state, bookId = _this$state.bookId, studentId = _this$state.studentId;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(_this.getBookDetails(bookId));\n\n            case 3:\n              _context3.next = 5;\n              return _regeneratorRuntime.awrap(_this.getStudentDetails(studentId));\n\n            case 5:\n              _context3.next = 7;\n              return _regeneratorRuntime.awrap(_this.checkBookAvailability(bookId));\n\n            case 7:\n              transactionType = _context3.sent;\n\n              if (transactionType) {\n                _context3.next = 13;\n                break;\n              }\n\n              _this.setState({\n                bookId: \"\",\n                studentId: \"\"\n              });\n\n              Alert.alert(\"The book doesn't exist in the library database!\");\n              _context3.next = 26;\n              break;\n\n            case 13:\n              if (!(transactionType === \"issue\")) {\n                _context3.next = 21;\n                break;\n              }\n\n              _context3.next = 16;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookIssue(studentId));\n\n            case 16:\n              isEligible = _context3.sent;\n\n              if (isEligible) {\n                _this$state2 = _this.state, bookName = _this$state2.bookName, studentName = _this$state2.studentName;\n\n                _this.initiateBookIssue(bookId, studentId, bookName, studentName);\n              }\n\n              Alert.alert(\"Book issued to the student!\");\n              _context3.next = 26;\n              break;\n\n            case 21:\n              _context3.next = 23;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForBookReturn(bookId, studentId));\n\n            case 23:\n              isEligible = _context3.sent;\n\n              if (isEligible) {\n                _this$state3 = _this.state, bookName = _this$state3.bookName, studentName = _this$state3.studentName;\n\n                _this.initiateBookReturn(bookId, studentId, bookName, studentName);\n              }\n\n              Alert.alert(\"Book returned to the library!\");\n\n            case 26:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getBookDetails = function (bookId) {\n      bookId = bookId.trim();\n      db.collection(\"books\").where(\"book_id\", \"==\", bookId).get().then(function (snapshot) {\n        snapshot.docs.map(function (doc) {\n          _this.setState({\n            bookName: doc.data().book_details.book_name\n          });\n        });\n      });\n    };\n\n    _this.getStudentDetails = function (studentId) {\n      studentId = studentId.trim();\n      db.collection(\"students\").where(\"student_id\", \"==\", studentId).get().then(function (snapshot) {\n        snapshot.docs.map(function (doc) {\n          _this.setState({\n            studentName: doc.data().student_details.student_name\n          });\n        });\n      });\n    };\n\n    _this.checkBookAvailability = function _callee4(bookId) {\n      var bookRef, transactionType;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"books\").where(\"book_id\", \"==\", bookId).get());\n\n            case 2:\n              bookRef = _context4.sent;\n              transactionType = \"\";\n\n              if (bookRef.docs.length == 0) {\n                transactionType = false;\n              } else {\n                bookRef.docs.map(function (doc) {\n                  transactionType = doc.data().is_book_available ? \"issue\" : \"return\";\n                });\n              }\n\n              return _context4.abrupt(\"return\", transactionType);\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentEligibilityForBookIssue = function _callee5(studentId) {\n      var studentRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"students\").where(\"student_id\", \"==\", studentId).get());\n\n            case 2:\n              studentRef = _context5.sent;\n              isStudentEligible = \"\";\n\n              if (studentRef.docs.length == 0) {\n                _this.setState({\n                  bookId: \"\",\n                  studentId: \"\"\n                });\n\n                isStudentEligible = false;\n                Alert.alert(\"The student id doesn't exist in the database!\");\n              } else {\n                studentRef.docs.map(function (doc) {\n                  if (doc.data().number_of_books_issued < 2) {\n                    isStudentEligible = true;\n                  } else {\n                    isStudentEligible = false;\n                    Alert.alert(\"The student has already issued 2 books!\");\n\n                    _this.setState({\n                      bookId: \"\",\n                      studentId: \"\"\n                    });\n                  }\n                });\n              }\n\n              return _context5.abrupt(\"return\", isStudentEligible);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.checkStudentEligibilityForBookReturn = function _callee6(bookId, studentId) {\n      var transactionRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"book_id\", \"==\", bookId).limit(1).get());\n\n            case 2:\n              transactionRef = _context6.sent;\n              isStudentEligible = \"\";\n              transactionRef.docs.map(function (doc) {\n                var lastBookTransaction = doc.data();\n\n                if (lastBookTransaction.student_id === studentId) {\n                  isStudentEligible = true;\n                } else {\n                  isStudentEligible = false;\n                  Alert.alert(\"The book wasn't issued by this student!\");\n\n                  _this.setState({\n                    bookId: \"\",\n                    studentId: \"\"\n                  });\n                }\n              });\n              return _context6.abrupt(\"return\", isStudentEligible);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookIssue = function _callee7(bookId, studentId, bookName, studentName) {\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                student_id: studentId,\n                student_name: studentName,\n                book_id: bookId,\n                book_name: bookName,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transaction_type: \"issue\"\n              });\n              db.collection(\"books\").doc(bookId).update({\n                is_book_available: false\n              });\n              db.collection(\"students\").doc(studentId).update({\n                number_of_books_issued: firebase.firestore.FieldValue.increment(1)\n              });\n\n              _this.setState({\n                bookId: \"\",\n                studentId: \"\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookReturn = function _callee8(bookId, studentId, bookName, studentName) {\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                student_id: studentId,\n                student_name: studentName,\n                book_id: bookId,\n                book_name: bookName,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transaction_type: \"return\"\n              });\n              db.collection(\"books\").doc(bookId).update({\n                is_book_available: true\n              });\n              db.collection(\"students\").doc(studentId).update({\n                number_of_books_issued: firebase.firestore.FieldValue.increment(-1)\n              });\n\n              _this.setState({\n                bookId: \"\",\n                studentId: \"\"\n              });\n\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      bookId: \"\",\n      studentId: \"\",\n      domState: \"normal\",\n      hasCameraPermissions: null,\n      scanned: false,\n      bookName: \"\",\n      studentName: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state4 = this.state,\n          bookId = _this$state4.bookId,\n          studentId = _this$state4.studentId,\n          domState = _this$state4.domState,\n          scanned = _this$state4.scanned;\n\n      if (domState !== \"normal\") {\n        return _jsx(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject\n        });\n      }\n\n      return _jsx(KeyboardAvoidingView, {\n        behavior: \"padding\",\n        style: styles.container,\n        children: _jsxs(ImageBackground, {\n          source: bgImage,\n          style: styles.bgImage,\n          children: [_jsxs(View, {\n            style: styles.upperContainer,\n            children: [_jsx(Image, {\n              source: appIcon,\n              style: styles.appIcon\n            }), _jsx(Image, {\n              source: appName,\n              style: styles.appName\n            })]\n          }), _jsxs(View, {\n            style: styles.lowerContainer,\n            children: [_jsxs(View, {\n              style: styles.textinputContainer,\n              children: [_jsx(TextInput, {\n                style: styles.textinput,\n                placeholder: \"Book Id\",\n                placeholderTextColor: \"#FFFFFF\",\n                value: bookId,\n                onChangeText: function onChangeText(text) {\n                  return _this2.setState({\n                    bookId: text\n                  });\n                }\n              }), _jsx(TouchableOpacity, {\n                style: styles.scanbutton,\n                onPress: function onPress() {\n                  return _this2.getCameraPermissions(\"bookId\");\n                },\n                children: _jsx(Text, {\n                  style: styles.scanbuttonText,\n                  children: \"Scan\"\n                })\n              })]\n            }), _jsxs(View, {\n              style: [styles.textinputContainer, {\n                marginTop: 25\n              }],\n              children: [_jsx(TextInput, {\n                style: styles.textinput,\n                placeholder: \"Student Id\",\n                placeholderTextColor: \"#FFFFFF\",\n                value: studentId,\n                onChangeText: function onChangeText(text) {\n                  return _this2.setState({\n                    studentId: text\n                  });\n                }\n              }), _jsx(TouchableOpacity, {\n                style: styles.scanbutton,\n                onPress: function onPress() {\n                  return _this2.getCameraPermissions(\"studentId\");\n                },\n                children: _jsx(Text, {\n                  style: styles.scanbuttonText,\n                  children: \"Scan\"\n                })\n              })]\n            }), _jsx(TouchableOpacity, {\n              style: [styles.button, {\n                marginTop: 25\n              }],\n              onPress: this.handleTransaction,\n              children: _jsx(Text, {\n                style: styles.buttonText,\n                children: \"Submit\"\n              })\n            })]\n          })]\n        })\n      });\n    }\n  }]);\n\n  return TransactionScreen;\n}(Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#FFFFFF\"\n  },\n  bgImage: {\n    flex: 1,\n    resizeMode: \"cover\",\n    justifyContent: \"center\"\n  },\n  upperContainer: {\n    flex: 0.5,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  appIcon: {\n    width: 200,\n    height: 200,\n    resizeMode: \"contain\",\n    marginTop: 80\n  },\n  appName: {\n    width: 80,\n    height: 80,\n    resizeMode: \"contain\"\n  },\n  lowerContainer: {\n    flex: 0.5,\n    alignItems: \"center\"\n  },\n  textinputContainer: {\n    borderWidth: 2,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    backgroundColor: \"#9DFD24\",\n    borderColor: \"#FFFFFF\"\n  },\n  textinput: {\n    width: \"57%\",\n    height: 50,\n    padding: 10,\n    borderColor: \"#FFFFFF\",\n    borderRadius: 10,\n    borderWidth: 3,\n    fontSize: 18,\n    backgroundColor: \"#5653D4\",\n    fontFamily: \"Rajdhani_600SemiBold\",\n    color: \"#FFFFFF\"\n  },\n  scanbutton: {\n    width: 100,\n    height: 50,\n    backgroundColor: \"#9DFD24\",\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  scanbuttonText: {\n    fontSize: 24,\n    color: \"#0A0101\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  button: {\n    width: \"43%\",\n    height: 55,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"#F48D20\",\n    borderRadius: 15\n  },\n  buttonText: {\n    fontSize: 24,\n    color: \"#FFFFFF\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Garg/Desktop/whitehatjr/eliberary/screens/Transaction.js"],"names":["React","Component","Permissions","BarCodeScanner","db","firebase","bgImage","require","appIcon","appName","TransactionScreen","props","getCameraPermissions","domState","askAsync","CAMERA","status","setState","hasCameraPermissions","scanned","handleBarCodeScanned","type","data","state","bookId","studentId","handleTransaction","getBookDetails","getStudentDetails","checkBookAvailability","transactionType","Alert","alert","checkStudentEligibilityForBookIssue","isEligible","bookName","studentName","initiateBookIssue","checkStudentEligibilityForBookReturn","initiateBookReturn","trim","collection","where","get","then","snapshot","docs","map","doc","book_details","book_name","student_details","student_name","bookRef","length","is_book_available","studentRef","isStudentEligible","number_of_books_issued","limit","transactionRef","lastBookTransaction","student_id","add","book_id","date","firestore","Timestamp","now","toDate","transaction_type","update","FieldValue","increment","undefined","StyleSheet","absoluteFillObject","styles","container","upperContainer","lowerContainer","textinputContainer","textinput","text","scanbutton","scanbuttonText","marginTop","button","buttonText","create","flex","backgroundColor","resizeMode","justifyContent","alignItems","width","height","borderWidth","borderRadius","flexDirection","borderColor","padding","fontSize","fontFamily","color","borderTopRightRadius","borderBottomRightRadius"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Text,\r\n  ImageBackground,\r\n  Image,\r\n  Alert,\r\n  ToastAndroid,\r\n  KeyboardAvoidingView\r\n} from \"react-native\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\n\r\nconst bgImage = require(\"../assets/background2.png\");\r\nconst appIcon = require(\"../assets/appIcon.png\");\r\nconst appName = require(\"../assets/appName.png\");\r\n\r\nexport default class TransactionScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      bookId: \"\",\r\n      studentId: \"\",\r\n      domState: \"normal\",\r\n      hasCameraPermissions: null,\r\n      scanned: false,\r\n      bookName: \"\",\r\n      studentName: \"\"\r\n    };\r\n  }\r\n\r\n  getCameraPermissions = async domState => {\r\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n\r\n    this.setState({\r\n      /*status === \"granted\" is true when user has granted permission\r\n          status === \"granted\" is false when user has not granted the permission\r\n        */\r\n      hasCameraPermissions: status === \"granted\",\r\n      domState: domState,\r\n      scanned: false\r\n    });\r\n  };\r\n\r\n  handleBarCodeScanned = async ({ type, data }) => {\r\n    const { domState } = this.state;\r\n\r\n    if (domState === \"bookId\") {\r\n      this.setState({\r\n        bookId: data,\r\n        domState: \"normal\",\r\n        scanned: true\r\n      });\r\n    } else if (domState === \"studentId\") {\r\n      this.setState({\r\n        studentId: data,\r\n        domState: \"normal\",\r\n        scanned: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleTransaction = async () => {\r\n    var { bookId, studentId } = this.state;\r\n    await this.getBookDetails(bookId);\r\n    await this.getStudentDetails(studentId);\r\n\r\n    var transactionType = await this.checkBookAvailability(bookId);\r\n\r\n    if (!transactionType) {\r\n      this.setState({ bookId: \"\", studentId: \"\" });\r\n      // For Android users only\r\n      // ToastAndroid.show(\"The book doesn't exist in the library database!\", ToastAndroid.SHORT);\r\n      Alert.alert(\"The book doesn't exist in the library database!\");\r\n    } else if (transactionType === \"issue\") {\r\n      var isEligible = await this.checkStudentEligibilityForBookIssue(\r\n        studentId\r\n      );\r\n\r\n      if (isEligible) {\r\n        var { bookName, studentName } = this.state;\r\n        this.initiateBookIssue(bookId, studentId, bookName, studentName);\r\n      }\r\n      // For Android users only\r\n      // ToastAndroid.show(\"Book issued to the student!\", ToastAndroid.SHORT);\r\n      Alert.alert(\"Book issued to the student!\");\r\n    } else {\r\n      var isEligible = await this.checkStudentEligibilityForBookReturn(\r\n        bookId,\r\n        studentId\r\n      );\r\n\r\n      if (isEligible) {\r\n        var { bookName, studentName } = this.state;\r\n        this.initiateBookReturn(bookId, studentId, bookName, studentName);\r\n      }\r\n      // For Android users only\r\n      // ToastAndroid.show(\"Book returned to the library!\", ToastAndroid.SHORT);\r\n      Alert.alert(\"Book returned to the library!\");\r\n    }\r\n  };\r\n\r\n  getBookDetails = bookId => {\r\n    bookId = bookId.trim();\r\n    db.collection(\"books\")\r\n      .where(\"book_id\", \"==\", bookId)\r\n      .get()\r\n      .then(snapshot => {\r\n        snapshot.docs.map(doc => {\r\n          this.setState({\r\n            bookName: doc.data().book_details.book_name\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  getStudentDetails = studentId => {\r\n    studentId = studentId.trim();\r\n    db.collection(\"students\")\r\n      .where(\"student_id\", \"==\", studentId)\r\n      .get()\r\n      .then(snapshot => {\r\n        snapshot.docs.map(doc => {\r\n          this.setState({\r\n            studentName: doc.data().student_details.student_name\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  checkBookAvailability = async bookId => {\r\n    const bookRef = await db\r\n      .collection(\"books\")\r\n      .where(\"book_id\", \"==\", bookId)\r\n      .get();\r\n\r\n    var transactionType = \"\";\r\n    if (bookRef.docs.length == 0) {\r\n      transactionType = false;\r\n    } else {\r\n      bookRef.docs.map(doc => {\r\n        //if the book is available then transaction type will be issue\r\n        // otherwise it will be return\r\n        transactionType = doc.data().is_book_available ? \"issue\" : \"return\";\r\n      });\r\n    }\r\n\r\n    return transactionType;\r\n  };\r\n\r\n  checkStudentEligibilityForBookIssue = async studentId => {\r\n    const studentRef = await db\r\n      .collection(\"students\")\r\n      .where(\"student_id\", \"==\", studentId)\r\n      .get();\r\n\r\n    var isStudentEligible = \"\";\r\n    if (studentRef.docs.length == 0) {\r\n      this.setState({\r\n        bookId: \"\",\r\n        studentId: \"\"\r\n      });\r\n      isStudentEligible = false;\r\n      Alert.alert(\"The student id doesn't exist in the database!\");\r\n    } else {\r\n      studentRef.docs.map(doc => {\r\n        if (doc.data().number_of_books_issued < 2) {\r\n          isStudentEligible = true;\r\n        } else {\r\n          isStudentEligible = false;\r\n          Alert.alert(\"The student has already issued 2 books!\");\r\n          this.setState({\r\n            bookId: \"\",\r\n            studentId: \"\"\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    return isStudentEligible;\r\n  };\r\n\r\n  checkStudentEligibilityForBookReturn = async (bookId, studentId) => {\r\n    const transactionRef = await db\r\n      .collection(\"transactions\")\r\n      .where(\"book_id\", \"==\", bookId)\r\n      .limit(1)\r\n      .get();\r\n    var isStudentEligible = \"\";\r\n    transactionRef.docs.map(doc => {\r\n      var lastBookTransaction = doc.data();\r\n      if (lastBookTransaction.student_id === studentId) {\r\n        isStudentEligible = true;\r\n      } else {\r\n        isStudentEligible = false;\r\n        Alert.alert(\"The book wasn't issued by this student!\");\r\n        this.setState({\r\n          bookId: \"\",\r\n          studentId: \"\"\r\n        });\r\n      }\r\n    });\r\n    return isStudentEligible;\r\n  };\r\n\r\n  initiateBookIssue = async (bookId, studentId, bookName, studentName) => {\r\n    //add a transaction\r\n    db.collection(\"transactions\").add({\r\n      student_id: studentId,\r\n      student_name: studentName,\r\n      book_id: bookId,\r\n      book_name: bookName,\r\n      date: firebase.firestore.Timestamp.now().toDate(),\r\n      transaction_type: \"issue\"\r\n    });\r\n    //change book status\r\n    db.collection(\"books\")\r\n      .doc(bookId)\r\n      .update({\r\n        is_book_available: false\r\n      });\r\n    //change number  of issued books for student\r\n    db.collection(\"students\")\r\n      .doc(studentId)\r\n      .update({\r\n        number_of_books_issued: firebase.firestore.FieldValue.increment(1)\r\n      });\r\n\r\n    // Updating local state\r\n    this.setState({\r\n      bookId: \"\",\r\n      studentId: \"\"\r\n    });\r\n  };\r\n\r\n  initiateBookReturn = async (bookId, studentId, bookName, studentName) => {\r\n    //add a transaction\r\n    db.collection(\"transactions\").add({\r\n      student_id: studentId,\r\n      student_name: studentName,\r\n      book_id: bookId,\r\n      book_name: bookName,\r\n      date: firebase.firestore.Timestamp.now().toDate(),\r\n      transaction_type: \"return\"\r\n    });\r\n    //change book status\r\n    db.collection(\"books\")\r\n      .doc(bookId)\r\n      .update({\r\n        is_book_available: true\r\n      });\r\n    //change number  of issued books for student\r\n    db.collection(\"students\")\r\n      .doc(studentId)\r\n      .update({\r\n        number_of_books_issued: firebase.firestore.FieldValue.increment(-1)\r\n      });\r\n\r\n    // Updating local state\r\n    this.setState({\r\n      bookId: \"\",\r\n      studentId: \"\"\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { bookId, studentId, domState, scanned } = this.state;\r\n    if (domState !== \"normal\") {\r\n      return (\r\n        <BarCodeScanner\r\n          onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\r\n          style={StyleSheet.absoluteFillObject}\r\n        />\r\n      );\r\n    }\r\n    return (\r\n      <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n        <ImageBackground source={bgImage} style={styles.bgImage}>\r\n          <View style={styles.upperContainer}>\r\n            <Image source={appIcon} style={styles.appIcon} />\r\n            <Image source={appName} style={styles.appName} />\r\n          </View>\r\n          <View style={styles.lowerContainer}>\r\n            <View style={styles.textinputContainer}>\r\n              <TextInput\r\n                style={styles.textinput}\r\n                placeholder={\"Book Id\"}\r\n                placeholderTextColor={\"#FFFFFF\"}\r\n                value={bookId}\r\n                onChangeText={text => this.setState({ bookId: text })}\r\n              />\r\n              <TouchableOpacity\r\n                style={styles.scanbutton}\r\n                onPress={() => this.getCameraPermissions(\"bookId\")}\r\n              >\r\n                <Text style={styles.scanbuttonText}>Scan</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <View style={[styles.textinputContainer, { marginTop: 25 }]}>\r\n              <TextInput\r\n                style={styles.textinput}\r\n                placeholder={\"Student Id\"}\r\n                placeholderTextColor={\"#FFFFFF\"}\r\n                value={studentId}\r\n                onChangeText={text => this.setState({ studentId: text })}\r\n              />\r\n              <TouchableOpacity\r\n                style={styles.scanbutton}\r\n                onPress={() => this.getCameraPermissions(\"studentId\")}\r\n              >\r\n                <Text style={styles.scanbuttonText}>Scan</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            <TouchableOpacity\r\n              style={[styles.button, { marginTop: 25 }]}\r\n              onPress={this.handleTransaction}\r\n            >\r\n              <Text style={styles.buttonText}>Submit</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </ImageBackground>\r\n      </KeyboardAvoidingView>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#FFFFFF\"\r\n  },\r\n  bgImage: {\r\n    flex: 1,\r\n    resizeMode: \"cover\",\r\n    justifyContent: \"center\"\r\n  },\r\n  upperContainer: {\r\n    flex: 0.5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  appIcon: {\r\n    width: 200,\r\n    height: 200,\r\n    resizeMode: \"contain\",\r\n    marginTop: 80\r\n  },\r\n  appName: {\r\n    width: 80,\r\n    height: 80,\r\n    resizeMode: \"contain\"\r\n  },\r\n  lowerContainer: {\r\n    flex: 0.5,\r\n    alignItems: \"center\"\r\n  },\r\n  textinputContainer: {\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#9DFD24\",\r\n    borderColor: \"#FFFFFF\"\r\n  },\r\n  textinput: {\r\n    width: \"57%\",\r\n    height: 50,\r\n    padding: 10,\r\n    borderColor: \"#FFFFFF\",\r\n    borderRadius: 10,\r\n    borderWidth: 3,\r\n    fontSize: 18,\r\n    backgroundColor: \"#5653D4\",\r\n    fontFamily: \"Rajdhani_600SemiBold\",\r\n    color: \"#FFFFFF\"\r\n  },\r\n  scanbutton: {\r\n    width: 100,\r\n    height: 50,\r\n    backgroundColor: \"#9DFD24\",\r\n    borderTopRightRadius: 10,\r\n    borderBottomRightRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  scanbuttonText: {\r\n    fontSize: 24,\r\n    color: \"#0A0101\",\r\n    fontFamily: \"Rajdhani_600SemiBold\"\r\n  },\r\n  button: {\r\n    width: \"43%\",\r\n    height: 55,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#F48D20\",\r\n    borderRadius: 15\r\n  },\r\n  buttonText: {\r\n    fontSize: 24,\r\n    color: \"#FFFFFF\",\r\n    fontFamily: \"Rajdhani_600SemiBold\"\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}