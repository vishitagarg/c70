{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Avatar, ListItem, Icon } from \"react-native-elements\";\nimport db from \"../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SearchScreen = function (_Component) {\n  _inherits(SearchScreen, _Component);\n\n  var _super = _createSuper(SearchScreen);\n\n  function SearchScreen(props) {\n    var _this;\n\n    _classCallCheck(this, SearchScreen);\n\n    _this = _super.call(this, props);\n\n    _this.componentDidMount = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this.getTransactions();\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.getTransactions = function () {\n      db.collection(\"transactions\").limit(10).get().then(function (snapshot) {\n        snapshot.docs.map(function (doc) {\n          _this.setState({\n            allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()])\n          });\n        });\n      });\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n      var date = item.date.toDate().toString().split(\" \").splice(0, 4).join(\" \");\n      var transactionType = item.transaction_type === \"issue\" ? \"issued\" : \"returned\";\n      return _jsx(View, {\n        style: {\n          borderWidth: 1\n        },\n        children: _jsxs(ListItem, {\n          bottomDivider: true,\n          children: [_jsx(Icon, {\n            type: \"antdesign\",\n            name: \"book\",\n            size: 40\n          }), _jsxs(ListItem.Content, {\n            children: [_jsx(ListItem.Title, {\n              style: styles.title,\n              children: item.book_name + \" ( \" + item.book_id + \" )\"\n            }), _jsx(ListItem.Subtitle, {\n              style: styles.subtitle,\n              children: \"This book \" + transactionType + \" by \" + item.student_name\n            }), _jsxs(View, {\n              style: styles.lowerLeftContaiiner,\n              children: [_jsxs(View, {\n                style: styles.transactionContainer,\n                children: [_jsx(Text, {\n                  style: [styles.transactionText, {\n                    color: item.transaction_type === \"issue\" ? \"#78D304\" : \"#0364F4\"\n                  }],\n                  children: item.transaction_type.charAt(0).toUpperCase() + item.transaction_type.slice(1)\n                }), _jsx(Icon, {\n                  type: \"ionicon\",\n                  name: item.transaction_type === \"issue\" ? \"checkmark-circle-outline\" : \"arrow-redo-circle-outline\",\n                  color: item.transaction_type === \"issue\" ? \"#78D304\" : \"#0364F4\"\n                })]\n              }), _jsx(Text, {\n                style: styles.date,\n                children: date\n              })]\n            })]\n          })]\n        }, i)\n      });\n    };\n\n    _this.handleSearch = function _callee2(text) {\n      var enteredText;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              enteredText = text.toUpperCase().split(\"\");\n              text = text.toUpperCase();\n\n              _this.setState({\n                allTransactions: []\n              });\n\n              if (!text) {\n                _this.getTransactions();\n              }\n\n              if (enteredText[0] === \"B\") {\n                db.collection(\"transactions\").where(\"book_id\", \"==\", text).get().then(function (snapshot) {\n                  snapshot.docs.map(function (doc) {\n                    _this.setState({\n                      allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()])\n                    });\n                  });\n                });\n              } else if (enterText[0] === \"B\") {\n                db.collection(\"transactions\").where(\"student_id\", \"==\", text).get().then(function (snapshot) {\n                  snapshot.docs.map(function (doc) {\n                    _this.setState({\n                      allTransactions: [].concat(_toConsumableArray(_this.state.allTransactions), [doc.data()])\n                    });\n                  });\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      allTransactions: [],\n      searchText: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(SearchScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          searchText = _this$state.searchText,\n          allTransactions = _this$state.allTransactions;\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsx(View, {\n          style: styles.upperContainer,\n          children: _jsxs(View, {\n            style: styles.textinputContainer,\n            children: [_jsx(TextInput, {\n              style: styles.textinput,\n              onChangeText: function onChangeText(text) {\n                return _this2.setState({\n                  searchText: text\n                });\n              },\n              placeholder: \"Type here\",\n              placeholderTextColor: \"#FFFFFF\"\n            }), _jsx(TouchableOpacity, {\n              style: styles.scanbutton,\n              onPress: function onPress() {\n                return _this2.handleSearch(searchText);\n              },\n              children: _jsx(Text, {\n                style: styles.scanbuttonText,\n                children: \"Search\"\n              })\n            })]\n          })\n        }), _jsx(View, {\n          style: styles.lowerContainer,\n          children: _jsx(FlatList, {\n            data: allTransactions,\n            renderItem: this.renderItem,\n            keyExtractor: function keyExtractor(item, index) {\n              return index.toString();\n            }\n          })\n        })]\n      });\n    }\n  }]);\n\n  return SearchScreen;\n}(Component);\n\nexport { SearchScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#5653D4\"\n  },\n  upperContainer: {\n    flex: 0.2,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  textinputContainer: {\n    borderWidth: 2,\n    borderRadius: 10,\n    flexDirection: \"row\",\n    backgroundColor: \"#9DFD24\",\n    borderColor: \"#FFFFFF\"\n  },\n  textinput: {\n    width: \"57%\",\n    height: 50,\n    padding: 10,\n    borderColor: \"#FFFFFF\",\n    borderRadius: 10,\n    borderWidth: 3,\n    fontSize: 18,\n    backgroundColor: \"#5653D4\",\n    fontFamily: \"Rajdhani_600SemiBold\",\n    color: \"#FFFFFF\"\n  },\n  scanbutton: {\n    width: 100,\n    height: 50,\n    backgroundColor: \"#9DFD24\",\n    borderTopRightRadius: 10,\n    borderBottomRightRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  scanbuttonText: {\n    fontSize: 24,\n    color: \"#0A0101\",\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  lowerContainer: {\n    flex: 0.8,\n    backgroundColor: \"#FFFFFF\"\n  },\n  title: {\n    fontSize: 20,\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  subtitle: {\n    fontSize: 16,\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  lowerLeftContaiiner: {\n    alignSelf: \"flex-end\",\n    marginTop: -40\n  },\n  transactionContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-evenly\",\n    alignItems: \"center\"\n  },\n  transactionText: {\n    fontSize: 20,\n    fontFamily: \"Rajdhani_600SemiBold\"\n  },\n  date: {\n    fontSize: 12,\n    fontFamily: \"Rajdhani_600SemiBold\",\n    paddingTop: 5\n  }\n});","map":{"version":3,"sources":["C:/Users/Garg/Desktop/whitehatjr/eliberary/screens/Search.js"],"names":["React","Component","Avatar","ListItem","Icon","db","SearchScreen","props","componentDidMount","getTransactions","collection","limit","get","then","snapshot","docs","map","doc","setState","allTransactions","state","data","renderItem","item","i","date","toDate","toString","split","splice","join","transactionType","transaction_type","borderWidth","styles","title","book_name","book_id","subtitle","student_name","lowerLeftContaiiner","transactionContainer","transactionText","color","charAt","toUpperCase","slice","handleSearch","text","enteredText","where","enterText","searchText","container","upperContainer","textinputContainer","textinput","scanbutton","scanbuttonText","lowerContainer","index","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems","borderRadius","flexDirection","borderColor","width","height","padding","fontSize","fontFamily","borderTopRightRadius","borderBottomRightRadius","alignSelf","marginTop","paddingTop"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Text,\r\n  FlatList\r\n} from \"react-native\";\r\nimport { Avatar, ListItem, Icon } from \"react-native-elements\";\r\nimport db from \"../config\";\r\n\r\nexport default class SearchScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allTransactions: [],\r\n      searchText: \"\"\r\n    };\r\n  }\r\n  componentDidMount = async () => {\r\n    this.getTransactions();\r\n  };\r\n\r\n  getTransactions = () => {\r\n    db.collection(\"transactions\")\r\n      .limit(10)\r\n      .get()\r\n      .then(snapshot => {\r\n        snapshot.docs.map(doc => {\r\n          this.setState({\r\n            allTransactions: [...this.state.allTransactions, doc.data()]\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  renderItem = ({ item, i }) => {\r\n    var date = item.date\r\n      .toDate()\r\n      .toString()\r\n      .split(\" \")\r\n      .splice(0, 4)\r\n      .join(\" \");\r\n\r\n    var transactionType =\r\n      item.transaction_type === \"issue\" ? \"issued\" : \"returned\";\r\n    return (\r\n      <View style={{ borderWidth: 1 }}>\r\n        <ListItem key={i} bottomDivider>\r\n          <Icon type={\"antdesign\"} name={\"book\"} size={40} />\r\n          <ListItem.Content>\r\n            <ListItem.Title style={styles.title}>\r\n              {`${item.book_name} ( ${item.book_id} )`}\r\n            </ListItem.Title>\r\n            <ListItem.Subtitle style={styles.subtitle}>\r\n              {`This book ${transactionType} by ${item.student_name}`}\r\n            </ListItem.Subtitle>\r\n            <View style={styles.lowerLeftContaiiner}>\r\n              <View style={styles.transactionContainer}>\r\n                <Text\r\n                  style={[\r\n                    styles.transactionText,\r\n                    {\r\n                      color:\r\n                        item.transaction_type === \"issue\"\r\n                          ? \"#78D304\"\r\n                          : \"#0364F4\"\r\n                    }\r\n                  ]}\r\n                >\r\n                  {item.transaction_type.charAt(0).toUpperCase() +\r\n                    item.transaction_type.slice(1)}\r\n                </Text>\r\n                <Icon\r\n                  type={\"ionicon\"}\r\n                  name={\r\n                    item.transaction_type === \"issue\"\r\n                      ? \"checkmark-circle-outline\"\r\n                      : \"arrow-redo-circle-outline\"\r\n                  }\r\n                  color={\r\n                    item.transaction_type === \"issue\" ? \"#78D304\" : \"#0364F4\"\r\n                  }\r\n                />\r\n              </View>\r\n              <Text style={styles.date}>{date}</Text>\r\n            </View>\r\n          </ListItem.Content>\r\n        </ListItem>\r\n      </View>\r\n    );\r\n  };\r\n  handleSearch= async text => {\r\n    var enteredText = text.toUpperCase().split(\"\");\r\n    text = text.toUpperCase();\r\n    this.setState({\r\n      allTransactions:[]\r\n      \r\n    })\r\n   if(!text){\r\n     this.getTransactions();\r\n   }\r\n   if(enteredText[0]===\"B\"){\r\n     db.collection(\"transactions\")\r\n     .where(\"book_id\",\"==\",text)\r\n     .get()\r\n     .then(snapshot=>{\r\n     snapshot.docs.map(doc=>{\r\n       this.setState({\r\n         allTransactions:[...this.state.allTransactions,doc.data()]\r\n       })\r\n     })\r\n     })\r\n   }\r\n\r\n   else if(enterText[0]===\"B\"){\r\n   db.collection(\"transactions\")\r\n   .where(\"student_id\",\"==\",text)\r\n   .get()\r\n   .then(snapshot=>{\r\n   snapshot.docs.map(doc=>{\r\n     this.setState({\r\n       allTransactions:[...this.state.allTransactions,doc.data()]\r\n     })\r\n   })\r\n   })\r\n  }\r\n  }\r\n\r\n  render() {\r\n    const { searchText, allTransactions } = this.state;\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.upperContainer}>\r\n          <View style={styles.textinputContainer}>\r\n            <TextInput\r\n              style={styles.textinput}\r\n              onChangeText={text => this.setState({ searchText: text })}\r\n              placeholder={\"Type here\"}\r\n              placeholderTextColor={\"#FFFFFF\"}\r\n            />\r\n            <TouchableOpacity \r\n              style={styles.scanbutton} \r\n              onPress={() => this.handleSearch(searchText)}>\r\n              <Text style={styles.scanbuttonText}>Search</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n        <View style={styles.lowerContainer}>\r\n          <FlatList\r\n            data={allTransactions}\r\n            renderItem={this.renderItem}\r\n            keyExtractor={(item, index) => index.toString()}\r\n       />\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#5653D4\"\r\n  },\r\n  upperContainer: {\r\n    flex: 0.2,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  textinputContainer: {\r\n    borderWidth: 2,\r\n    borderRadius: 10,\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#9DFD24\",\r\n    borderColor: \"#FFFFFF\"\r\n  },\r\n  textinput: {\r\n    width: \"57%\",\r\n    height: 50,\r\n    padding: 10,\r\n    borderColor: \"#FFFFFF\",\r\n    borderRadius: 10,\r\n    borderWidth: 3,\r\n    fontSize: 18,\r\n    backgroundColor: \"#5653D4\",\r\n    fontFamily: \"Rajdhani_600SemiBold\",\r\n    color: \"#FFFFFF\"\r\n  },\r\n  scanbutton: {\r\n    width: 100,\r\n    height: 50,\r\n    backgroundColor: \"#9DFD24\",\r\n    borderTopRightRadius: 10,\r\n    borderBottomRightRadius: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  scanbuttonText: {\r\n    fontSize: 24,\r\n    color: \"#0A0101\",\r\n    fontFamily: \"Rajdhani_600SemiBold\"\r\n  },\r\n  lowerContainer: {\r\n    flex: 0.8,\r\n    backgroundColor: \"#FFFFFF\"\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontFamily: \"Rajdhani_600SemiBold\"\r\n  },\r\n  subtitle: {\r\n    fontSize: 16,\r\n    fontFamily: \"Rajdhani_600SemiBold\"\r\n  },\r\n  lowerLeftContaiiner: {\r\n    alignSelf: \"flex-end\",\r\n    marginTop: -40\r\n  },\r\n  transactionContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n    alignItems: \"center\"\r\n  },\r\n  transactionText: {\r\n    fontSize: 20,\r\n\r\n    fontFamily: \"Rajdhani_600SemiBold\"\r\n  },\r\n  date: {\r\n    fontSize: 12,\r\n    fontFamily: \"Rajdhani_600SemiBold\",\r\n    paddingTop: 5\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}