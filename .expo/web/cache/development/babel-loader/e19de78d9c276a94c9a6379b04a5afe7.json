{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport * as Font from \"expo-font\";\nimport { Rajdhani_600SemiBold } from \"@expo-google-fonts/rajdhani\";\nimport BottomTabNavigator from \"./components/BottomTabNavigator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      fontLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"loadFonts\",\n    value: function loadFonts() {\n      return _regeneratorRuntime.async(function loadFonts$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync({\n                Rajdhani_600SemiBold: Rajdhani_600SemiBold\n              }));\n\n            case 2:\n              this.setState({\n                fontLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadFonts();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var fontLoaded = this.state.fontLoaded;\n\n      if (fontLoaded) {\n        return _jsx(BottomTabNavigator, {});\n      }\n\n      return null;\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["C:/Users/Garg/Desktop/whitehatjr/eliberary/App.js"],"names":["React","Component","Font","Rajdhani_600SemiBold","BottomTabNavigator","App","state","fontLoaded","loadAsync","setState","loadFonts"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,oBAAT,QAAqC,6BAArC;AACA,OAAOC,kBAAP;;;IAEqBC,G;;;;;AACrB,iBAAa;AAAA;;AAAA;;AACX;AACA,UAAKC,KAAL,GAAY;AACVC,MAAAA,UAAU,EAAC;AADD,KAAZ;AAFW;AAKZ;;;;WAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACQL,IAAI,CAACM,SAAL,CAAe;AACnBL,gBAAAA,oBAAoB,EAACA;AADF,eAAf,CADR;;AAAA;AAIE,mBAAKM,QAAL,CAAc;AAACF,gBAAAA,UAAU,EAAC;AAAZ,eAAd;;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAOC,6BAAmB;AACjB,WAAKG,SAAL;AACD;;;WACF,kBAAS;AACP,UAAOH,UAAP,GAAoB,KAAKD,KAAzB,CAAOC,UAAP;;AACA,UAAGA,UAAH,EAAc;AACZ,eAAO,KAAC,kBAAD,KAAP;AACD;;AACD,aAAO,IAAP;AACD;;;;EAxB8BN,S;;SAAZI,G","sourcesContent":["import React, { Component } from 'react';\nimport * as Font from \"expo-font\";\nimport { Rajdhani_600SemiBold } from \"@expo-google-fonts/rajdhani\";\nimport BottomTabNavigator from './components/BottomTabNavigator';\n\nexport default class App extends Component {\nconstructor(){\n  super();\n  this.state= {\n    fontLoaded:false\n  }\n}\n\n  async loadFonts(){\n    await Font.loadAsync({\n      Rajdhani_600SemiBold:Rajdhani_600SemiBold\n    });\n    this.setState({fontLoaded:true });\n  }\n\n   componentDidMount(){\n     this.loadFonts();\n   }\n  render() {\n    const {fontLoaded}= this.state;\n    if(fontLoaded){\n      return <BottomTabNavigator/>\n    } \n    return null;\n  }\n\n}                                            "]},"metadata":{},"sourceType":"module"}